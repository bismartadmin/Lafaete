WITH
SUBTB1 AS (

SELECT
       A.COMPANY,
       A.ORDER_REFERENCE,
       IFSLAF.CUSTOMER_ORDER_API.GET_DATE_ENTERED(A.ORDER_REFERENCE) AS DATA_CRIACAO_OV,              
       A.INVOICE_ID,
       A.VOUCHER_NO_REF,
       A.LEDGER_ITEM_ID,
       A.LEDGER_ITEM_SERIES_ID,
       
       CASE NVL(A.ADV_INV, 'FALSE')
         WHEN 'FALSE'
         THEN 'NÃO'
         ELSE 'SIM'
       END AS TITULO_ANTECIPADO,
       
       'NOTA FISCAL' AS TIPO_RECEBIMENTO,
       A.LEDGER_DATE,
       A.INSTALLMENT_ID,
       A.IDENTITY,
       A.NAME,
       IFSLAF.IDENTITY_INVOICE_INFO_API.GET_IDENTITY_TYPE(A.COMPANY, A.IDENTITY, 'Cliente') AS TIPO_PARCEIRO,         
       IFSLAF.INVOICE_API.GET_PAY_TERM_ID(A.COMPANY, A.INVOICE_ID) AS COND_PAGTO,
       IFSLAF.PAYMENT_TERM_API.GET_DESCRIPTION(A.COMPANY, IFSLAF.INVOICE_API.GET_PAY_TERM_ID(A.COMPANY, A.INVOICE_ID)) AS DESCR_COND_PAGTO,
       ROUND(A.INV_AMOUNT * NVL(C.PERCENTUAL, 1), 2) AS VALOR_PARCELA,
       
       ROUND(COALESCE((A.INV_AMOUNT - (SELECT Z.TAX_WITHHELD_CURR_AMOUNT
                                       FROM IFSLAF.ABSTRACT_PAYMENT_PLAN2 Z
                                       WHERE Z.INVOICE_ID = A.INVOICE_ID
                                       AND Z.INSTALLMENT_ID = A.INSTALLMENT_ID
                                       AND Z.PARTY_TYPE_DB = A.PARTY_TYPE_DB)),
                                       A.INV_AMOUNT) * NVL(C.PERCENTUAL, 1), 2) AS VALOR_LIQUIDO_PARCELA,
                                       
       ROUND(NVL(B.INTEREST_CURR_AMOUNT, 0) * NVL(C.PERCENTUAL, 1), 2) AS VALOR_JUROS,
       ROUND(NVL(B.FINE_CURR_AMOUNT, 0) * NVL(C.PERCENTUAL, 1), 2) AS VALOR_MULTA,
       ROUND(NVL(B.USED_DISCOUNT, 0) * NVL(C.PERCENTUAL, 1), 2) AS DESCONTO_USADO,
       ROUND(NVL(B.WRITE_OFF_CURR_AMOUNT, 0) * NVL(C.PERCENTUAL, 1), 2) AS VALOR_BAIXA,
       B.WRITE_OFF_CODE,
       ROUND(NVL(DECODE(B.IS_NEW_LEDGER_ITEM, 'FALSE', B.PAID_AMOUNT - NVL(B.BOE_DISCOUNT_FEE, 0), B.PAID_AMOUNT), 0) * NVL(C.PERCENTUAL, 1), 2) AS VALOR_RECEBIDO,
       ROUND(NVL(DECODE(B.IS_NEW_LEDGER_ITEM, 'FALSE', B.PAID_AMOUNT - NVL(B.BOE_DISCOUNT_FEE, 0), B.PAID_AMOUNT) + NVL(B.INTEREST_CURR_AMOUNT, 0) + NVL(B.FINE_CURR_AMOUNT, 0), 0) * NVL(C.PERCENTUAL, 1), 2) AS VALOR_LIQUIDO_RECEBIDO,
       ROUND(A.OPEN_AMOUNT * NVL(C.PERCENTUAL, 1), 2) AS VALOR_ABERTO,
       A.CLIENT_INV_STATE,
       B.PAYMENT_TYPE_CODE,
       to_char(B.PAYMENT_ID) PAYMENT_ID,
       B.PAY_DATE,
       B.VOUCHER_DATE,
       A.C_DUE_DATE_ORG,
       A.DUE_DATE,
       TO_CHAR(A.C_DUE_DATE_ORG, 'Day', 'NLS_DATE_LANGUAGE=PORTUGUESE') AS DIA_VENCIMENTO_ORIGINAL,
       
       CASE
         WHEN TRUNC(COALESCE(B.PAY_DATE, SYSDATE)) - TRUNC(A.C_DUE_DATE_ORG) - CASE WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 1 THEN 1 WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 7 THEN 2 ELSE 0 END <= 0 THEN '1 - Em dia'
         WHEN TRUNC(COALESCE(B.PAY_DATE, SYSDATE)) - TRUNC(A.C_DUE_DATE_ORG) - CASE WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 1 THEN 1 WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 7 THEN 2 ELSE 0 END < 31 THEN '2 - Vencidos até 30 dias'
         WHEN TRUNC(COALESCE(B.PAY_DATE, SYSDATE)) - TRUNC(A.C_DUE_DATE_ORG) - CASE WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 1 THEN 1 WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 7 THEN 2 ELSE 0 END < 61 THEN '3 - Vencidos entre 31 e 60 dias'
         WHEN TRUNC(COALESCE(B.PAY_DATE, SYSDATE)) - TRUNC(A.C_DUE_DATE_ORG) - CASE WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 1 THEN 1 WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 7 THEN 2 ELSE 0 END < 91 THEN '4 - Vencidos entre 61 e 90 dias'
         WHEN TRUNC(COALESCE(B.PAY_DATE, SYSDATE)) - TRUNC(A.C_DUE_DATE_ORG) - CASE WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 1 THEN 1 WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 7 THEN 2 ELSE 0 END < 121 THEN '5 - Vencidos entre 91 e 120 dias'
         WHEN TRUNC(COALESCE(B.PAY_DATE, SYSDATE)) - TRUNC(A.C_DUE_DATE_ORG) - CASE WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 1 THEN 1 WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 7 THEN 2 ELSE 0 END < 181 THEN '6 - Vencidos entre 121 e 180 dias'
         WHEN TRUNC(COALESCE(B.PAY_DATE, SYSDATE)) - TRUNC(A.C_DUE_DATE_ORG) - CASE WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 1 THEN 1 WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 7 THEN 2 ELSE 0 END < 366 THEN '7 - Vencidos entre 180 e 365 dias'
         ELSE '8 - Vencidos acima de 365 dias'
       END AS PERIODO_TITULO,
              
       CASE
         WHEN B.PAY_DATE IS NULL
         THEN
          CASE
            WHEN TRUNC(SYSDATE) - TRUNC(A.C_DUE_DATE_ORG) - CASE WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 1 THEN 1 WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 7 THEN 2 ELSE 0 END <= 0 THEN 'A vencer'
            ELSE 'Vencido'
            END ELSE
          CASE
            WHEN TRUNC(B.PAY_DATE) - TRUNC(A.C_DUE_DATE_ORG) - CASE WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 1 THEN 1 WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 7 THEN 2 ELSE 0 END > 31 THEN 'Recuperação de inadimplência'
            WHEN TRUNC(B.PAY_DATE) - TRUNC(A.C_DUE_DATE_ORG) - CASE WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 1 THEN 1 WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 7 THEN 2 ELSE 0 END > 0 THEN 'Recuperação de atraso'
            WHEN TRUNC(B.PAY_DATE) - TRUNC(A.C_DUE_DATE_ORG) - CASE WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 1 THEN 1 WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 7 THEN 2 ELSE 0 END = 0 THEN 'Em dia'
            ELSE 'Antecipado'
          END
       END AS SITUACAO_RECEBIMENTO,
      
       IFSLAF.CASH_ACCOUNT_API.GET_ACCOUNT_IDENTITY(B.COMPANY, IFSLAF.PAYMENT_PER_CURRENCY_API.GET_SHORT_NAME(B.COMPANY, B.SERIES_ID, B.PAYMENT_ID, B.CURRENCY)) AS ID_CONTA_BAIXA,
       IFSLAF.PAYMENT_PER_CURRENCY_API.GET_SHORT_NAME(B.COMPANY, B.SERIES_ID, B.PAYMENT_ID, B.CURRENCY) AS DESCR_CONTA_BAIXA,
       C.CODENO_B,
       C.CODENO_C,
       C.CODENO_D,
       C.CODENO_E,
       C.CODENO_F,
       C.CODENO_G,
       C.CODENO_H,
       C.CODENO_I,
       CAST('A' AS VARCHAR2(1)) AS BLOCO_CODIGO
FROM
       IFSLAF.CUST_INV_INTEREST_FINE_QRY A
       LEFT JOIN IFSLAF.LEDGER_TRANSACTION_CU_QRY B ON (A.COMPANY = B.COMPANY AND A.IDENTITY = B.IDENTITY AND A.PARTY_TYPE_DB = B.PARTY_TYPE_DB AND A.LEDGER_ITEM_ID = B.LEDGER_ITEM_ID AND A.LEDGER_ITEM_SERIES_ID = B.LEDGER_ITEM_SERIES_ID AND A.LEDGER_ITEM_VERSION = B.LEDGER_ITEM_VERSION AND A.INSTALLMENT_ID = B.INSTALLMENT_ID AND B.ROLLEDBACK = 'FALSE' AND B.PAYMENT_TYPE_CODE_DB IN ('CUSTOFF', 'CUSTPAY', 'CUSTSUPPOFF'))
       LEFT JOIN IFSINFO.LAF_CODE_PART_OV C ON (A.COMPANY = C.COMPANY AND A.INVOICE_ID = C.INVOICE_ID)
WHERE
       (A.LEDGER_ITEM_SERIES_ID = 'CD')
 

UNION ALL
 

SELECT
      A.COMPANY,
      A.ORDER_REFERENCE,
      IFSLAF.CUSTOMER_ORDER_API.GET_DATE_ENTERED(A.ORDER_REFERENCE) AS DATA_CRIACAO_OV, 
      A.INVOICE_ID,
      A.VOUCHER_NO_REF,
      A.LEDGER_ITEM_ID,
      A.LEDGER_ITEM_SERIES_ID,
                    
      CASE NVL(A.ADV_INV, 'FALSE')
        WHEN 'FALSE'
        THEN 'NÃO'
        ELSE 'SIM'
      END AS TITULO_ANTECIPADO,
  
      CASE
        WHEN NVL(A.ADV_INV, 'FALSE') = 'TRUE' AND A.LEDGER_ITEM_SERIES_ID = 'CI'
        THEN 'ADIANTAMENTO'
        ELSE 'NOTA FISCAL'
      END AS TIPO_RECEBIMENTO,
  
      A.LEDGER_DATE,
      A.INSTALLMENT_ID,  
      A.IDENTITY,
      A.NAME,
      IFSLAF.IDENTITY_INVOICE_INFO_API.GET_IDENTITY_TYPE(A.COMPANY, A.IDENTITY, 'Cliente') AS TIPO_PARCEIRO,
      IFSLAF.INVOICE_API.GET_PAY_TERM_ID(A.COMPANY, A.INVOICE_ID) AS COND_PAGTO,
      IFSLAF.PAYMENT_TERM_API.GET_DESCRIPTION(A.COMPANY, IFSLAF.INVOICE_API.GET_PAY_TERM_ID(A.COMPANY, A.INVOICE_ID)) AS DESCR_COND_PAGTO,
      A.INV_AMOUNT AS VALOR_PARCELA,
      
      COALESCE((A.INV_AMOUNT - (SELECT Z.TAX_WITHHELD_CURR_AMOUNT
                                FROM IFSLAF.ABSTRACT_PAYMENT_PLAN2 Z
                                WHERE Z.INVOICE_ID = A.INVOICE_ID
                                AND Z.INSTALLMENT_ID = A.INSTALLMENT_ID
                                AND Z.PARTY_TYPE_DB = A.PARTY_TYPE_DB)),
                                A.INV_AMOUNT) AS VALOR_LIQUIDO_PARCELA,
                                
      NVL(B.INTEREST_CURR_AMOUNT, 0) AS VALOR_JUROS,
      NVL(B.FINE_CURR_AMOUNT, 0) AS VALOR_MULTA,
      NVL(B.USED_DISCOUNT, 0) AS DESCONTO_USADO,
      NVL(B.WRITE_OFF_CURR_AMOUNT, 0) AS VALOR_BAIXA,
      B.WRITE_OFF_CODE,
      NVL(DECODE(B.IS_NEW_LEDGER_ITEM, 'FALSE', B.PAID_AMOUNT - NVL(B.BOE_DISCOUNT_FEE, 0), B.PAID_AMOUNT), 0) AS VALOR_RECEBIDO,
      NVL(DECODE(B.IS_NEW_LEDGER_ITEM, 'FALSE', B.PAID_AMOUNT - NVL(B.BOE_DISCOUNT_FEE, 0), B.PAID_AMOUNT) + NVL(B.INTEREST_CURR_AMOUNT, 0) + NVL(B.FINE_CURR_AMOUNT, 0), 0)AS VALOR_LIQUIDO_RECEBIDO,
      A.OPEN_AMOUNT AS VALOR_ABERTO,
      A.CLIENT_INV_STATE,
      B.PAYMENT_TYPE_CODE,
      to_char(B.PAYMENT_ID),
      B.PAY_DATE,
      B.VOUCHER_DATE,
      A.C_DUE_DATE_ORG,
      A.DUE_DATE,
      TO_CHAR(A.C_DUE_DATE_ORG, 'Day', 'NLS_DATE_LANGUAGE=PORTUGUESE') AS DIA_VENCIMENTO_ORIGINAL,
      
      CASE
        WHEN TRUNC(COALESCE(B.PAY_DATE, SYSDATE)) - TRUNC(A.C_DUE_DATE_ORG) - CASE WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 1 THEN 1 WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 7 THEN 2 ELSE 0 END <= 0 THEN '1 - Em dia'
        WHEN TRUNC(COALESCE(B.PAY_DATE, SYSDATE)) - TRUNC(A.C_DUE_DATE_ORG) - CASE WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 1 THEN 1 WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 7 THEN 2 ELSE 0 END < 31 THEN '2 - Vencidos até 30 dias'
        WHEN TRUNC(COALESCE(B.PAY_DATE, SYSDATE)) - TRUNC(A.C_DUE_DATE_ORG) - CASE WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 1 THEN 1 WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 7 THEN 2 ELSE 0 END < 61 THEN '3 - Vencidos entre 31 e 60 dias'
        WHEN TRUNC(COALESCE(B.PAY_DATE, SYSDATE)) - TRUNC(A.C_DUE_DATE_ORG) - CASE WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 1 THEN 1 WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 7 THEN 2 ELSE 0 END < 91 THEN '4 - Vencidos entre 61 e 90 dias'
        WHEN TRUNC(COALESCE(B.PAY_DATE, SYSDATE)) - TRUNC(A.C_DUE_DATE_ORG) - CASE WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 1 THEN 1 WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 7 THEN 2 ELSE 0 END < 121 THEN '5 - Vencidos entre 91 e 120 dias'
        WHEN TRUNC(COALESCE(B.PAY_DATE, SYSDATE)) - TRUNC(A.C_DUE_DATE_ORG) - CASE WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 1 THEN 1 WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 7 THEN 2 ELSE 0 END < 181 THEN '6 - Vencidos entre 121 e 180 dias'
        WHEN TRUNC(COALESCE(B.PAY_DATE, SYSDATE)) - TRUNC(A.C_DUE_DATE_ORG) - CASE WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 1 THEN 1 WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 7 THEN 2 ELSE 0 END < 366 THEN '7 - Vencidos entre 180 e 365 dias'
        ELSE '8 - Vencidos acima de 365 dias'
      END AS PERIODO_TITULO,
             
      CASE
        WHEN B.PAY_DATE IS NULL
        THEN
          CASE
            WHEN TRUNC(SYSDATE) - TRUNC(A.C_DUE_DATE_ORG) - CASE WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 1 THEN 1 WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 7 THEN 2 ELSE 0 END <= 0 THEN 'A vencer'
            ELSE 'Vencido'
            END ELSE
          CASE
            WHEN TRUNC(B.PAY_DATE) - TRUNC(A.C_DUE_DATE_ORG) - CASE WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 1 THEN 1 WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 7 THEN 2 ELSE 0 END > 31 THEN 'Recuperação de inadimplência'
            WHEN TRUNC(B.PAY_DATE) - TRUNC(A.C_DUE_DATE_ORG) - CASE WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 1 THEN 1 WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 7 THEN 2 ELSE 0 END > 0 THEN 'Recuperação de atraso'
            WHEN TRUNC(B.PAY_DATE) - TRUNC(A.C_DUE_DATE_ORG) - CASE WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 1 THEN 1 WHEN TO_CHAR(A.C_DUE_DATE_ORG, 'D') = 7 THEN 2 ELSE 0 END = 0 THEN 'Em dia'
            ELSE 'Antecipado'
          END
      END AS SITUACAO_RECEBIMENTO,

      IFSLAF.CASH_ACCOUNT_API.GET_ACCOUNT_IDENTITY(B.COMPANY, IFSLAF.PAYMENT_PER_CURRENCY_API.GET_SHORT_NAME(B.COMPANY, B.SERIES_ID, B.PAYMENT_ID, B.CURRENCY)) AS ID_CONTA_BAIXA,
      IFSLAF.PAYMENT_PER_CURRENCY_API.GET_SHORT_NAME(B.COMPANY, B.SERIES_ID, B.PAYMENT_ID, B.CURRENCY) AS DESCR_CONTA_BAIXA,
      A.CODE_B,
      A.CODE_C,
      A.CODE_D,
      A.CODE_E,
      A.CODE_F,
      A.CODE_G,
      A.CODE_H,
      A.CODE_I,
      CAST('B' AS VARCHAR2(1)) AS BLOCO_CODIGO
FROM
      IFSLAF.CUST_INV_INTEREST_FINE_QRY A
      LEFT JOIN IFSLAF.LEDGER_TRANSACTION_CU_QRY B ON (A.COMPANY = B.COMPANY AND A.IDENTITY = B.IDENTITY AND A.PARTY_TYPE_DB = B.PARTY_TYPE_DB AND A.LEDGER_ITEM_ID = B.LEDGER_ITEM_ID AND A.LEDGER_ITEM_SERIES_ID = B.LEDGER_ITEM_SERIES_ID AND A.LEDGER_ITEM_VERSION = B.LEDGER_ITEM_VERSION AND A.INSTALLMENT_ID = B.INSTALLMENT_ID AND B.ROLLEDBACK = 'FALSE' AND B.PAYMENT_TYPE_CODE_DB IN ('CUSTOFF', 'CUSTPAY', 'CUSTSUPPOFF'))
WHERE
      (A.LEDGER_ITEM_SERIES_ID IN ('CI', 'EX'))


UNION ALL

 
SELECT
      NID.COMPANY,
      NULL,
      NULL AS DATA_CRIACAO_OV,
      NID.LI_INVOICE_ID,
      IPN.VOUCHER_NO,
      NID.LEDGER_ITEM_ID,
      NID.LEDGER_ITEM_SERIES_ID,
      
      CASE NVL(NID.ADV_INV, 'FALSE')
        WHEN 'FALSE'
        THEN 'NÃO'
        ELSE 'SIM'
      END AS TITULO_ANTECIPADO,
        
      'NÃO IDENTIFICADO' AS TIPO_RECEBIMENTO,
      IPN.VOUCHER_DATE AS DATA_TITULO,
      NID.INSTALLMENT_ID,
      NID.IDENTITY,
      IFSLAF.INVOICE_LIBRARY_API.GET_IDENTITY_NAME_DB(NID.CHILD_COMPANY, NID.IDENTITY, NID.PARTY_TYPE_DB),
      'Externo' AS TIPO_PARCEIRO,
      NULL AS COND_PAGTO,
      NULL AS DESCR_COND_PAGTO,
      NID.CURR_AMOUNT AS VALOR_PARCELA,
      NID.CURR_AMOUNT AS VALOR_LIQUIDO_PARCELA,
      0 AS VALOR_JUROS,
      0 AS VALOR_MULTA,
      NID.DISC_CURR_AMOUNT AS DESCONTO_USADO,
      NID.PAYMENT_AMOUNT AS VALOR_BAIXA,
      NULL,
      NID.CURR_AMOUNT AS VALOR_RECEBIDO,
      NID.CURR_AMOUNT AS VALOR_LIQUIDO_RECEBIDO,
      0 AS VALOR_ABERTO,
      NULL AS STATUS_TITULO,
      'Pagamento Cliente',
      to_char(NID.PAYMENT_ID),
      IPN.PAY_DATE,
      IPN.VOUCHER_DATE,
      NID.DUE_DATE,
      NID.DUE_DATE,
      TO_CHAR(NID.DUE_DATE, 'Day', 'NLS_DATE_LANGUAGE=PORTUGUESE') AS DIA_VENCIMENTO_ORIGINAL,    
      '1 - Em dia' AS PERIODO_TITULO,          
      'Em dia' AS SITUACAO_RECEBIMENTO,
      IFSLAF.CASH_ACCOUNT_API.GET_ACCOUNT_IDENTITY(NID.COMPANY, IFSLAF.PAYMENT_PER_CURRENCY_API.GET_SHORT_NAME(NID.COMPANY, NID.SERIES_ID, NID.PAYMENT_ID, NID.CURRENCY)) AS ID_CONTA_BAIXA,
      IFSLAF.PAYMENT_PER_CURRENCY_API.GET_SHORT_NAME(NID.COMPANY, NID.SERIES_ID, NID.PAYMENT_ID, NID.CURRENCY) AS DESCR_CONTA_BAIXA,
      NID.CODE_B,
      NID.CODE_C,
      NID.CODE_D,
      NID.CODE_E,
      NID.CODE_F,
      NID.CODE_G,
      NID.CODE_H,
      NID.CODE_I,             
      CAST('C' AS VARCHAR2(1)) AS BLOCO_CODIGO      
FROM
      IFSLAF.INTERCOMPANY_TRANSACTION_QRY NID
      LEFT JOIN IFSLAF.INTER_PAYMENT_UNION IPN ON (NID.COMPANY = IPN.COMPANY AND NID.SERIES_ID = IPN.SERIES_ID AND NID.PAYMENT_ID = IPN.PAYMENT_ID)
WHERE
      (NID.IS_NEW_LEDGER_ITEM = 'TRUE')
      AND (NID.IS_PARKED = 'TRUE')
      AND (NID.LEDGER_ITEM_SERIES_ID = 'CUPOA')
      AND (NID.PARTY_TYPE_DB = 'COMPANY')
      AND (NID.ROLLEDBACK = 'FALSE')
 

UNION ALL

 
SELECT
      NID.COMPANY,
      DET.ORDER_REFERENCE,
      IFSLAF.CUSTOMER_ORDER_API.GET_DATE_ENTERED(DET.ORDER_REFERENCE) AS DATA_CRIACAO_OV,              
      NULL AS ID_TITULO,
      DET.VOUCHER_NO,
      NID.LEDGER_ITEM_ID,
      NID.LEDGER_ITEM_SERIES_ID,
             
      CASE NVL(DET.ADV_INV, 'FALSE')
        WHEN 'FALSE'
        THEN 'NÃO'
        ELSE 'SIM'
      END AS TITULO_ANTECIPADO,
  
      'ADIANTAMENTO' AS TIPO_RECEBIMENTO,
      DET.LEDGER_DATE,
      NID.INSTALLMENT_ID,
      NID.IDENTITY,              
      NID.NAME,
      'Externo' AS TIPO_PARCEIRO,
      NULL AS COND_PAGTO,
      NULL AS DESCR_COND_PAGTO,
      NID.PAID_AMOUNT AS VALOR_PARCELA,  
      NID.PAID_AMOUNT AS VALOR_LIQUIDO_PARCELA,
      0  AS VALOR_JUROS,
      0 AS VALOR_MULTA,
      NVL(NID.USED_DISCOUNT, 0) AS DESCONTO_USADO,
      NID.PAYMENT_AMOUNT AS VALOR_BAIXA,
      NULL,
      NID.PAID_AMOUNT AS VALOR_RECEBIDO,                              
      NID.PAID_AMOUNT AS VALOR_LIQUIDO_RECEBIDO,
      0 AS VALOR_ABERTO,
      NULL AS STATUS_TITULO,
      'Pagamento Cliente',
      to_char(NID.PAYMENT_ID),
      DET.DUE_DATE,
      NID.VOUCHER_DATE,       
      DET.DUE_DATE,
      DET.DUE_DATE,
      TO_CHAR(DET.DUE_DATE, 'Day', 'NLS_DATE_LANGUAGE=PORTUGUESE') AS DIA_VENCIMENTO_ORIGINAL,    
      '1 - Em dia' AS PERIODO_TITULO,          
      'Em dia' AS SITUACAO_RECEBIMENTO,
      IFSLAF.CASH_ACCOUNT_API.GET_ACCOUNT_IDENTITY(NID.COMPANY, IFSLAF.PAYMENT_PER_CURRENCY_API.GET_SHORT_NAME(NID.COMPANY, NID.SERIES_ID, NID.PAYMENT_ID, NID.CURRENCY)) AS ID_CONTA_BAIXA,
      IFSLAF.PAYMENT_PER_CURRENCY_API.GET_SHORT_NAME(NID.COMPANY, NID.SERIES_ID, NID.PAYMENT_ID, NID.CURRENCY) AS DESCR_CONTA_BAIXA,
      DET.CODE_B,
      DET.CODE_C,
      DET.CODE_D,
      DET.CODE_E,
      DET.CODE_F,
      DET.CODE_G,
      DET.CODE_H,
      DET.CODE_I,              
      CAST('D' AS VARCHAR2(1)) AS BLOCO_CODIGO      
FROM
      IFSLAF.LEDGER_TRANSACTION_CU_QRY NID
      INNER JOIN IFSLAF.LEDGER_ITEM_CU_DET_QRY DET ON (NID.IDENTITY = DET.IDENTITY AND NID.COMPANY = DET.COMPANY AND NID.PARTY_TYPE = DET.PARTY_TYPE AND NID.LEDGER_ITEM_SERIES_ID = DET.LEDGER_ITEM_SERIES_ID AND NID.LEDGER_ITEM_ID = DET.LEDGER_ITEM_ID AND NID.LEDGER_ITEM_VERSION = DET.LEDGER_ITEM_VERSION)
WHERE
      (NID.IS_NEW_LEDGER_ITEM = 'TRUE')
      AND (NID.LEDGER_ITEM_SERIES_ID = 'CUPOA')
      AND (NID.PAYMENT_TYPE_CODE_DB IN ('CUSTOFF', 'CUSTPAY', 'CUSTSUPPOFF'))
      AND (NID.ROLLEDBACK = 'FALSE')
      
          
UNION ALL

          
SELECT
      b.COMPANY AS EMPRESA,
      NULL id_ov,
      NULL DATA_CRIACAO_OV,
      null AS ID_TITULO,
      A.VOUCHER_NO_REF AS LANCTO,
      IFSLAF.MIXED_PAYMENT_API.Get_Statement_No(b.company, b.mixed_payment_id) AS TITULO_EXTRATO,
      C.SERIES_ID AS SERIE,
      'Não' titulo_antecipado,
      'Tesouraria' TIPO_RECEBIMENTO,
      a.mixed_payment_date AS DATA_TITULO,
      1 ID_PARCELA,
      C.IDENTITY AS ID,
      B.TEXT AS NOME,
      'Externo' tipo_parceiro,
      NULL ID_COND_PAGTO,
      NULL DESCR_COND_PAGTO,
      B.CURR_AMOUNT  AS VALOR_PARCELA,
      B.CURR_AMOUNT  AS VALOR_liquido_PARCELA,
      NULL           VALOR_JUROS,
      NULL           VALOR_MULTA,
      NULL           VALOR_DESCONTO,
      B.CURR_AMOUNT  AS VALOR_BAIXA,
      '' COD_BAIXA,
      B.CURR_AMOUNT VALOR_RECEBIDO, 
      B.CURR_AMOUNT VALOR_RECEBIDO_LIQUIDO,
      0 VALOR_ABERTO, 
      'Pgto Contab' STATUS_TITULO,
      'Tesouraria' TIPO_PAGAMENTO,
      NULL,
      mp.voucher_date,
      mp.voucher_date  AS DATA_LANCTO,
      a.mixed_payment_date AS VENCTO_ORIGINAL,
      a.mixed_payment_date AS VENCTO_ORIGINAL,
      TO_CHAR(a.mixed_payment_date, 'Day', 'NLS_DATE_LANGUAGE=PORTUGUESE')AS VENCTO,
      '1 - Em dia' AS PERIODO_TITULO,
      'Em dia' AS SITUACAO_RECEBIMENTO,
      B.code_a AS CONTA_CONTABIL,
      pt.short_name,
      B.code_B,
      B.code_C,
      B.code_D,
      B.code_E,
      B.code_F,
      B.code_G,
      B.code_H,
      B.code_I,
      'T' bloco
FROM
      IFSLAF.mixed_payment_voucher c 
      JOIN IFSLAF.mixed_pay_voucher_head mp ON (c.voucher_no = mp.voucher_no AND c.voucher_type = mp.voucher_type AND c.company = mp.company)
      JOIN IFSLAF.mixed_payment_lump_sum b ON (mp.mixed_payment_id = b.mixed_payment_id AND c.company = b.company)
      JOIN IFSLAF.MIXED_PAYMENT A ON (A.COMPANY = B.COMPANY AND A.MIXED_PAYMENT_ID = B.MIXED_PAYMENT_ID)
      JOIN IFSLAF.payment_transaction_tab pt ON (c.company = pt.company AND mp.mixed_payment_id = pt.mixed_payment_id)        
WHERE
      c.posting_type != 'PP1'
      AND c.curr_amount <= 0
      AND c.identity IS NULL
      AND IFSLAF.cash_account_API.Get_Institute_ID(pt.company, pt.short_name) IS NOT NULL
      AND pt.rowtype = 'CashTransaction'
      AND IFSLAF.Payment_API.Get_Payment_Rollback_Status_Db(pt.company, pt.series_id, pt.payment_id) <> 'ROLLBACK'
      AND pt.rolledback = 'FALSE'
      AND pt.party_type IS NULL
      AND pt.mixed_payment_id IS NOT NULL
      AND pt.lump_sum_trans_id IS NOT NULL
      AND pt.mixed_payment_ledger_trans_id IS NULL
      AND b.mixed_payment_trans_type_db IN ('DIRECTCASHPAYMENT', 'BANKFEEPAYMENT')
      
       ),
 
SUBTAB AS (

SELECT
       SUBTB1.COMPANY,
       SUBTB1.ORDER_REFERENCE,
       SUBTB1.DATA_CRIACAO_OV,              
       SUBTB1.INVOICE_ID,
       SUBTB1.VOUCHER_NO_REF,
       SUBTB1.LEDGER_ITEM_ID,
       SUBTB1.LEDGER_ITEM_SERIES_ID,             
       SUBTB1.TITULO_ANTECIPADO,
       SUBTB1.TIPO_RECEBIMENTO,
       SUBTB1.LEDGER_DATE,
       SUBTB1.INSTALLMENT_ID,
       SUBTB1.IDENTITY,
       SUBTB1.NAME,
       SUBTB1.TIPO_PARCEIRO,
       CAST(IFSLAF.CUSTOMER_BR_TAX_INFO_API.GET_PERSON_TYPE(SUBTB1.IDENTITY, IFSLAF.CUSTOMER_ORDER_API.GET_BILL_ADDR_NO(SUBTB1.ORDER_REFERENCE)) AS VARCHAR2(20)) AS TIPO_ENTIDADE,
       CAST(IFSLAF.SALES_MARKET_API.GET_DESCRIPTION(IFSLAF.CUST_ORD_CUSTOMER_API.GET_MARKET_CODE(SUBTB1.IDENTITY)) AS VARCHAR(200)) AS MERCADO,  
       SUBTB1.COND_PAGTO,
       SUBTB1.DESCR_COND_PAGTO,
       
       CASE
         WHEN SUBTB1.VALOR_RECEBIDO > 0 AND SUBTB1.VALOR_RECEBIDO < SUBTB1.VALOR_PARCELA
         THEN SUBTB1.VALOR_RECEBIDO
         ELSE SUBTB1.VALOR_PARCELA
       END AS VALOR_PARCELA,
  
       CASE
         WHEN SUBTB1.VALOR_RECEBIDO > 0 AND SUBTB1.VALOR_RECEBIDO < SUBTB1.VALOR_PARCELA
         THEN SUBTB1.VALOR_RECEBIDO
         ELSE SUBTB1.VALOR_PARCELA 
       END AS VALOR_LIQUIDO_PARCELA,
       
       SUBTB1.VALOR_JUROS,
       SUBTB1.VALOR_MULTA,
       SUBTB1.DESCONTO_USADO,  
       SUBTB1.VALOR_BAIXA,
       SUBTB1.WRITE_OFF_CODE,
       SUBTB1.VALOR_RECEBIDO,
       SUBTB1.VALOR_LIQUIDO_RECEBIDO,
       
       CASE
         WHEN SUBTB1.VALOR_RECEBIDO > 0 AND SUBTB1.VALOR_RECEBIDO < SUBTB1.VALOR_PARCELA
         THEN 0
         ELSE SUBTB1.VALOR_ABERTO
       END AS VALOR_ABERTO,
       
       SUBTB1.CLIENT_INV_STATE,
       SUBTB1.PAYMENT_TYPE_CODE,
       SUBTB1.PAYMENT_ID,
       SUBTB1.PAY_DATE,
       SUBTB1.VOUCHER_DATE,
       SUBTB1.C_DUE_DATE_ORG,
       SUBTB1.DUE_DATE,
       SUBTB1.DIA_VENCIMENTO_ORIGINAL,  
       SUBTB1.PERIODO_TITULO,            
       SUBTB1.SITUACAO_RECEBIMENTO,
       SUBTB1.ID_CONTA_BAIXA,
       SUBTB1.DESCR_CONTA_BAIXA,
       SUBTB1.CODENO_B,
       SUBTB1.CODENO_C,
       SUBTB1.CODENO_D,
       SUBTB1.CODENO_E,
       SUBTB1.CODENO_F,
       SUBTB1.CODENO_G,
       SUBTB1.CODENO_H,
       SUBTB1.CODENO_I,             
       SUBTB1.BLOCO_CODIGO
FROM
       SUBTB1
       
 
UNION ALL
 
SELECT
      SUBTB1.COMPANY,
      SUBTB1.ORDER_REFERENCE,
      SUBTB1.DATA_CRIACAO_OV,              
      SUBTB1.INVOICE_ID,
      SUBTB1.VOUCHER_NO_REF,
      SUBTB1.LEDGER_ITEM_ID,
      SUBTB1.LEDGER_ITEM_SERIES_ID,              
      SUBTB1.TITULO_ANTECIPADO,
      SUBTB1.TIPO_RECEBIMENTO,
      SUBTB1.LEDGER_DATE,
      SUBTB1.INSTALLMENT_ID,
      SUBTB1.IDENTITY,
      SUBTB1.NAME,
      SUBTB1.TIPO_PARCEIRO,
      CAST(IFSLAF.CUSTOMER_BR_TAX_INFO_API.GET_PERSON_TYPE(SUBTB1.IDENTITY, IFSLAF.CUSTOMER_ORDER_API.GET_BILL_ADDR_NO(SUBTB1.ORDER_REFERENCE)) AS VARCHAR2(20)) AS TIPO_ENTIDADE,
      CAST(IFSLAF.SALES_MARKET_API.GET_DESCRIPTION(IFSLAF.CUST_ORD_CUSTOMER_API.GET_MARKET_CODE(SUBTB1.IDENTITY)) AS VARCHAR2(200)) AS MERCADO,
      SUBTB1.COND_PAGTO,
      SUBTB1.DESCR_COND_PAGTO,
      SUBTB1.VALOR_ABERTO AS VALOR_PARCELA,
      SUBTB1.VALOR_ABERTO AS VALOR_LIQUIDO_PARCELA,
      0 AS VALOR_JUROS,
      0 AS VALOR_MULTA,
      0 AS DESCONTO_USADO,
      0 AS VALOR_BAIXA,
      CAST(NULL AS VARCHAR2(20)) AS WRITE_OFF_CODE,
      0 AS VALOR_RECEBIDO,
      0 AS VALOR_LIQUIDO_RECEBIDO,
      SUBTB1.VALOR_ABERTO,
      SUBTB1.CLIENT_INV_STATE,
      NULL AS PAYMENT_TYPE_CODE,
      NULL AS PAYMENT_ID,
      NULL AS PAY_DATE,
      SUBTB1.VOUCHER_DATE,
      SUBTB1.C_DUE_DATE_ORG,
      SUBTB1.DUE_DATE,
      SUBTB1.DIA_VENCIMENTO_ORIGINAL,
      SUBTB1.PERIODO_TITULO,             
      SUBTB1.SITUACAO_RECEBIMENTO,
      NULL AS ID_CONTA_BAIXA,
      NULL AS DESCR_CONTA_BAIXA,
      SUBTB1.CODENO_B,
      SUBTB1.CODENO_C,
      SUBTB1.CODENO_D,
      SUBTB1.CODENO_E,
      SUBTB1.CODENO_F,
      SUBTB1.CODENO_G,
      SUBTB1.CODENO_H,
      SUBTB1.CODENO_I,              
      SUBTB1.BLOCO_CODIGO
FROM
      SUBTB1
WHERE
      SUBTB1.VALOR_LIQUIDO_RECEBIDO > 0 
      AND SUBTB1.VALOR_LIQUIDO_RECEBIDO < SUBTB1.VALOR_PARCELA
       )
 
SELECT
      SUBTAB.COMPANY AS ID_EMPRESA,
      SUBTAB.ORDER_REFERENCE AS ID_OV,
      SUBTAB.DATA_CRIACAO_OV,
      SUBTAB.INVOICE_ID AS ID_TITULO,
      SUBTAB.VOUCHER_NO_REF AS N_LANCTO,
      SUBTAB.LEDGER_ITEM_ID AS N_TITULO,
      SUBTAB.LEDGER_ITEM_SERIES_ID AS SERIE,
      SUBTAB.TITULO_ANTECIPADO,
      SUBTAB.TIPO_RECEBIMENTO,
      SUBTAB.LEDGER_DATE AS DATA_TITULO,
      SUBTAB.INSTALLMENT_ID AS ID_PARCELA,
      SUBTAB.IDENTITY AS ID_CLIENTE,
      SUBTAB.NAME AS DESC_CLIENTE,
      SUBTAB.TIPO_PARCEIRO,
      SUBTAB.TIPO_ENTIDADE,
      SUBTAB.MERCADO,
      SUBTAB.COND_PAGTO AS ID_COND_PAGTO,
      SUBTAB.DESCR_COND_PAGTO,
      SUBTAB.VALOR_PARCELA,
      SUBTAB.VALOR_LIQUIDO_PARCELA,
      SUBTAB.VALOR_JUROS,
      SUBTAB.VALOR_MULTA,
      SUBTAB.DESCONTO_USADO,
      SUBTAB.VALOR_BAIXA,
      SUBTAB.WRITE_OFF_CODE AS COD_BAIXA,
      SUBTAB.VALOR_RECEBIDO,
      SUBTAB.VALOR_LIQUIDO_RECEBIDO,
      SUBTAB.VALOR_ABERTO,
      SUBTAB.CLIENT_INV_STATE AS STATUS_TITULO,
      SUBTAB.PAYMENT_TYPE_CODE AS TIPO_PAGAMENTO,
      SUBTAB.PAYMENT_ID AS ID_PAGAMENTO,
      SUBTAB.PAY_DATE AS DATA_PAGAMENTO,
      SUBTAB.VOUCHER_DATE AS DATA_LANCTO,
      SUBTAB.C_DUE_DATE_ORG AS DATA_VENCIMENTO_ORIGINAL,
      SUBTAB.DUE_DATE AS DATA_VENCIMENTO,
      SUBTAB.DIA_VENCIMENTO_ORIGINAL,
      SUBTAB.PERIODO_TITULO,
      SUBTAB.SITUACAO_RECEBIMENTO,
      
      COALESCE(SUBTAB.DESCR_CONTA_BAIXA,
             (SELECT J.SHORT_NAME
              FROM IFSLAF.CASH_ACCOUNT J
              WHERE J.SHORT_NAME = IFSLAF.PAYMENT_WAY_CFP.GET_CF$_CASH_ACCOUNT_PAY(IFSLAF.PAYMENT_WAY_API.GET_OBJKEY(SUBTAB.COMPANY, IFSLAF.PAYMENT_WAY_PER_IDENTITY_API.GET_DEFAULT_PAY_WAY(SUBTAB.COMPANY, SUBTAB.IDENTITY, 'CUSTOMER')))),
             (SELECT N.SHORT_NAME
              FROM IFSLAF.CASH_ACCOUNT_CUSTOMER N
              WHERE N.COMPANY = SUBTAB.COMPANY AND N.DEFAULT_FLAG = 'TRUE')) AS ID_CONTA_MOV,
              
      SUBTAB.ID_CONTA_BAIXA AS ID_CODE_A_CONTA_CONTAB,
      SUBTAB.DESCR_CONTA_BAIXA AS DESC_CODE_A_CONTA_CONTAB,
      SUBTAB.CODENO_B AS ID_CODE_B_CR,
      SUBTAB.CODENO_C AS ID_CODE_C_SITE,
      SUBTAB.CODENO_D AS ID_CODE_D_NATUREZA,
      SUBTAB.CODENO_E AS ID_CODE_E_ATIVO,
      SUBTAB.CODENO_F AS ID_CODE_F_PROJETO,
      SUBTAB.CODENO_G AS ID_CODE_G_LINHA,
      SUBTAB.CODENO_H AS ID_CODE_H_APR_CUSTO,
      SUBTAB.CODENO_I AS ID_CODE_I_NEGOCIO,
      
      CASE IFSLAF.PAYMENT_PLAN_API.GET_C_CNPJ_JURIDICAL(SUBTAB.COMPANY, SUBTAB.INVOICE_ID, SUBTAB.INSTALLMENT_ID)
        WHEN 'TRUE' THEN 'TÍTULO JURÍDICO'
        ELSE IFSLAF.PAYMENT_PLAN_API.GET_C_INVOICE_TYPE_ID(SUBTAB.COMPANY, SUBTAB.INVOICE_ID, SUBTAB.INSTALLMENT_ID)
      END TIPO_DE_TITULO_AJUST,
      
      L.CF$_CNPJ AS CNPJ,
      L.CF$_STATUS_JURIDICO AS STATUS_JURIDICO,
      L.CF$_LEGAL_CLASS AS CLASSIFICACAO_JURIDICO,
      L.CF$_PROCESSO_JURIDICO AS PROCESSO_JURIDICO,
      L.CF$_PREVISAO_RECEBIMENTO AS PREVISAO_RECEBIMENTO,
      L.CF$_PROBABILIDADE_JURIDICO AS PROBABILIDADE_JURIDICA,
      L.CF$_TIPO_ACAO AS TIPO_ACAO,
      SUBTAB.BLOCO_CODIGO      
FROM 
      SUBTAB
      LEFT JOIN IFSLAF.LAF_TITULO_JURIDICO_CLV L ON (SUBTAB.LEDGER_ITEM_ID = L.CF$_TITULO AND SUBTAB.INSTALLMENT_ID = L.CF$_PARCELA AND SUBTAB.IDENTITY = L.CF$_ID_CLIENTE)
