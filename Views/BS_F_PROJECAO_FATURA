WITH
SERVICO_MAX_DATA AS (
    SELECT
        J.CUST_ORDER_NO,
        J.CUST_ORDER_LINE_NO,
        J.CUST_ORDER_REL_NO,
        MAX(J.REAL_F_DATE) AS MAX_REAL_F_DATE
    FROM IFSLAF.HISTORICAL_SEPARATE_UIV J
    WHERE J.OBJSTATE <> 'CANCELED'
    GROUP BY
        J.CUST_ORDER_NO,
        J.CUST_ORDER_LINE_NO,
        J.CUST_ORDER_REL_NO
),
PROJECAO_VALOR AS (
    SELECT
        a.opportunity_no,
        SUM(a.MONTH_VALUE) AS VALOR_PROJECAO
    FROM IFSLAF.C_REC_AGREEMENT_RENTED_ASSET a
    INNER JOIN IFSLAF.C_RECURRENT_AGREEMENT b ON a.opportunity_no = b.opportunity_no
    WHERE a.RENTED_ASSET = 'TRUE'
    GROUP BY a.opportunity_no
),
SUBTAB AS (
    SELECT
        'SERVICO' AS PARAMETRO_PROJECAO,
        CAST(A.C_AGREEMENT_ID AS VARCHAR2(10)) AS CONTRATO_RECORRENTE,
        IFSLAF.CUSTOMER_ORDER_API.GET_QUOTATION_NO(A.ORDER_NO) AS COTACAO_VENDAS,
        A.ORDER_NO AS ORDEM_VENDA,
        COALESCE(A.C_OPPORTUNITY_NO, IFSLAF.ORDER_QUOTATION_API.GET_BUSINESS_OPPORTUNITY_NO(IFSLAF.CUSTOMER_ORDER_API.GET_QUOTATION_NO(A.ORDER_NO))) AS OPORTUNIDADE,
        COALESCE(A.REAL_SHIP_DATE, A.CF$_LOGISTICS_RESCHEDULING, A.CF$_DATE_LOGISTICA, A.WANTED_DELIVERY_DATE) AS DATA_FINAL_PLANEJADO,
        COALESCE(SMD.MAX_REAL_F_DATE, A.REAL_SHIP_DATE, A.CF$_LOGISTICS_RESCHEDULING, A.CF$_DATE_LOGISTICA, A.WANTED_DELIVERY_DATE) AS DATA_PROX_FAT,
        CAST(NULL AS DATE) AS DT_REAL_ENVIO_MEDICAO,
        A.CUSTOMER_NO AS ID_CLIENTE,
        IFSLAF.CUSTOMER_INFO_API.GET_NAME(A.CUSTOMER_NO) AS NOME_CLIENTE,
        IFSLAF.IDENTITY_INVOICE_INFO_API.GET_IDENTITY_TYPE(A.COMPANY, A.CUSTOMER_NO, IFSLAF.CUSTOMER_INFO_API.GET_PARTY_TYPE(A.CUSTOMER_NO)) AS TIPO_CLIENTE,
        A.COMPANY AS EMPRESA,
        A.CONTRACT AS SITE,
        COALESCE(A.CODE_H, A.CONTRACT) AS APR_CUSTO,
        A.STATE AS STATUS_CONTRATO,
        'SERVIÇO' AS TIPO_CONTRATO,
        A.SALESMAN_CODE AS VENDEDOR,
        COALESCE(IFSLAF.C_RECURRENT_AGREEMENT_API.GET_AGREEMENT_MODALITY(A.C_OPPORTUNITY_NO, A.C_AGREEMENT_ID), IFSLAF.L_A_F_M_O_D_C_O_T_CFP.DECODE(IFSLAF.ORDER_QUOTATION_CFP.GET_CF$_QUOTATION_MODALITY(IFSLAF.ORDER_QUOTATION_API.GET_OBJKEY(IFSLAF.CUSTOMER_ORDER_API.GET_QUOTATION_NO(A.ORDER_NO))))) AS MODALIDADE_CONTRATO,
        IFSLAF.CUSTOMER_ORDER_LINE_API.GET_SALE_PRICE_INCL_TAX_TOTAL(A.ORDER_NO, A.LINE_NO, A.REL_NO, A.LINE_ITEM_NO) - A.CF$_SERVICE_BILLED AS VALOR_LOCADO_MENSAL,
        CAST(NULL AS VARCHAR2(100)) AS SETOR_RESPONSAVEL,
        CAST(NULL AS VARCHAR2(4000)) AS OBSERVACOES
    FROM IFSLAF.CUSTOMER_ORDER_JOIN_CFV A
    INNER JOIN IFSLAF.ORDER_LINE_STAGED_BILLING B ON (A.ORDER_NO = B.ORDER_NO AND A.LINE_NO = B.LINE_NO AND A.REL_NO = B.REL_NO AND A.LINE_ITEM_NO = B.LINE_ITEM_NO AND B.LINE_ITEM_NO <= 0)
    INNER JOIN (
        SELECT D.CON_ORDER_NO FROM IFSLAF.ORDER_QUOTATION_LINE D
        UNION
        SELECT D.DELIVERY_ORDER_NO FROM IFSLAF.C_REC_AGREEMENT_ITEM D
        UNION
        SELECT D.SERVICE_ORDER_NO FROM IFSLAF.C_REC_AGREEMENT_ITEM D
    ) C ON (A.ORDER_NO = C.CON_ORDER_NO)
    LEFT JOIN SERVICO_MAX_DATA SMD ON A.ORDER_NO = SMD.CUST_ORDER_NO AND A.LINE_NO = SMD.CUST_ORDER_LINE_NO AND A.REL_NO = SMD.CUST_ORDER_REL_NO
    WHERE A.BLOCKED_FOR_INVOICING_DB = 'FALSE'
      AND A.ORDER_ID = 'SEO'
      AND A.OBJSTATE NOT IN ('Cancelled', 'Invoiced')
      AND A.COMPANY <> '41'
      AND NVL(IFSLAF.C_RECURRENT_AGREEMENT_API.GET_STATE(A.C_OPPORTUNITY_NO, A.C_AGREEMENT_ID), ' ') <> 'Finalizado'
      AND NVL(IFSLAF.C_RECURRENT_AGREEMENT_API.GET_ADVANCE_PAYMENT_DB(A.C_OPPORTUNITY_NO, A.C_AGREEMENT_ID), ' ') <> 'TRUE'
      AND NOT EXISTS (
          SELECT 1 FROM IFSLAF.C_MEASUR_BULLETIN_SERVICE C
          WHERE IFSLAF.HISTORICAL_SEPARATE_API.GET_CUST_ORDER_NO(C.WO_NO) = A.ORDER_NO
            AND IFSLAF.HISTORICAL_SEPARATE_API.GET_CUST_ORDER_LINE_NO(C.WO_NO) = A.LINE_NO
            AND IFSLAF.HISTORICAL_SEPARATE_API.GET_CUST_ORDER_REL_NO(C.WO_NO) = A.REL_NO
      )

    UNION ALL

    SELECT
        CONREC.PARAMETRO_PROJECAO,
        CONREC.CONTRATO_RECORRENTE,
        NULL AS COTACAO_VENDAS,
        NULL AS ORDEM_VENDA,
        CONREC.OPORTUNIDADE,
        CONREC.DATA_FINAL_PLANEJADO,
        CONREC.DATA_PROX_FAT,
        CONREC.DT_REAL_ENVIO_MEDICAO,
        CONREC.ID_CLIENTE,
        IFSLAF.CUSTOMER_INFO_API.GET_NAME(CONREC.ID_CLIENTE) AS NOME_CLIENTE,
        IFSLAF.IDENTITY_INVOICE_INFO_API.GET_IDENTITY_TYPE(CONREC.EMPRESA, CONREC.ID_CLIENTE, IFSLAF.CUSTOMER_INFO_API.GET_PARTY_TYPE(CONREC.ID_CLIENTE)) AS TIPO_CLIENTE,
        CONREC.EMPRESA,
        CONREC.SITE,
        CONREC.APR_CUSTO,
        CONREC.STATUS_CONTRATO,
        CONREC.TIPO_CONTRATO,
        CONREC.VENDEDOR,
        IFSLAF.C_REC_AGREEMENT_MODALITY_API.DECODE(CONREC.AGREEMENT_MODALITY_DB) AS MODALIDADE_CONTRATO,
        SUM(CONREC.VALOR_LOCADO) AS VALOR_LOCADO_MENSAL,
        CONREC.SETOR_RESPONSAVEL,
        CONREC.OBSERVACOES
    FROM (
        SELECT
            'LOCACAO' AS PARAMETRO_PROJECAO,
            CAST(A.AGREEMENT_ID AS VARCHAR2(10)) AS CONTRATO_RECORRENTE,
            A.OPPORTUNITY_NO AS OPORTUNIDADE,
            A.CUSTOMER_ID AS ID_CLIENTE,
            A.COMPANY AS EMPRESA,
            A.CONTRACT AS SITE,
            COALESCE(A.CF$_CODE_H, A.CONTRACT) AS APR_CUSTO,
            A.STATE AS STATUS_CONTRATO,
            A.AGREEMENT_TYPE AS TIPO_CONTRATO,
            A.SALESMAN_CODE AS VENDEDOR,
            A.AGREEMENT_MODALITY_DB,
            TRUNC(A.END_PLANNED_DATE) AS DATA_FINAL_PLANEJADO,
            CASE WHEN TRUNC(ADD_MONTHS(D.START_DATE + IFSLAF.C_REC_AGREEMENT_INFO_API.GET_DAYS_FOR_APPROVAL(A.OPPORTUNITY_NO, A.AGREEMENT_ID), TABMES.MES), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_NEXT_BILLING_REF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1 < SYSDATE THEN ADD_MONTHS(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_NEXT_BILLING_REF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), TRUNC(MONTHS_BETWEEN(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_NEXT_BILLING_REF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), SYSDATE)) + 1) ELSE TRUNC(ADD_MONTHS(D.START_DATE + IFSLAF.C_REC_AGREEMENT_INFO_API.GET_DAYS_FOR_APPROVAL(A.OPPORTUNITY_NO, A.AGREEMENT_ID), TABMES.MES), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_NEXT_BILLING_REF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1 END AS DATA_PROX_FAT,
            IFSLAF.C_REC_AGREEMENT_INFO_CFP.Get_Cf$_Data_Real_Medicao(IFSLAF.C_REC_AGREEMENT_INFO_CFP.Get_Objkey(A.OPPORTUNITY_NO,A.AGREEMENT_ID)) DT_REAL_ENVIO_MEDICAO,
            CASE WHEN TRUNC(GREATEST(D.START_DATE, TRUNC(ADD_MONTHS(TRUNC(ADD_MONTHS(D.START_DATE, TABMES.MES - 1), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_BILLING_CUTOFF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1, -1)) + 1)) = TRUNC(ADD_MONTHS(TRUNC(ADD_MONTHS(D.START_DATE, TABMES.MES - 1), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_BILLING_CUTOFF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1, -1)) + 1 AND TRUNC(LEAST(NVL(D.FINISH_DATE, IFSLAF.DATABASE_SYS.GET_LAST_CALENDAR_DATE), A.END_PLANNED_DATE, (TRUNC(ADD_MONTHS(D.START_DATE, TABMES.MES - 1), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_BILLING_CUTOFF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1))) = TRUNC(ADD_MONTHS(D.START_DATE, TABMES.MES - 1), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_BILLING_CUTOFF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1 THEN D.MONTH_VALUE ELSE D.MONTH_VALUE / 30 * (TRUNC(LEAST(NVL(D.FINISH_DATE, IFSLAF.DATABASE_SYS.GET_LAST_CALENDAR_DATE), A.END_PLANNED_DATE, (TRUNC(ADD_MONTHS(D.START_DATE, TABMES.MES - 1), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_BILLING_CUTOFF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1))) - TRUNC(GREATEST(D.START_DATE, TRUNC(ADD_MONTHS(TRUNC(ADD_MONTHS(D.START_DATE, TABMES.MES - 1), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_BILLING_CUTOFF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1, -1)) + 1)) + 1) END AS VALOR_LOCADO,
            CASE WHEN E.MB_ID IS NOT NULL THEN IFSLAF.C_MEASUREMENT_BULLETIN_CFP.Get_Cf$_Setor_Responsavel(IFSLAF.C_MEASUREMENT_BULLETIN_CFP.Get_Objkey(E.MB_ID)) ELSE NULL END AS SETOR_RESPONSAVEL,
            (SELECT OBS.CF$_OBSERVACAO FROM IFSLAF.NOTAS_CLV OBS WHERE OBS.CF$_ID_BM = E.MB_ID) AS OBSERVACOES
        FROM IFSLAF.C_RECURRENT_AGREEMENT_CFV A
        INNER JOIN IFSLAF.C_REC_AGREEMENT_ITEM B ON A.OPPORTUNITY_NO = B.OPPORTUNITY_NO AND A.AGREEMENT_ID = B.AGREEMENT_ID
        INNER JOIN IFSLAF.C_REC_AGREEMENT_ITEM_PROD C ON B.OPPORTUNITY_NO = C.OPPORTUNITY_NO AND B.AGREEMENT_ID = C.AGREEMENT_ID AND B.LINE_NO = C.LINE_NO
        INNER JOIN IFSLAF.C_REC_AGREEMENT_RENTED_ASSET D ON A.OPPORTUNITY_NO = D.OPPORTUNITY_NO AND A.AGREEMENT_ID = D.AGREEMENT_ID AND C.LINE_NO = D.LINE_NO AND C.SEQ_NO = D.SEQ_NO AND D.RENTED_ASSET = 'TRUE'
        CROSS APPLY (SELECT LEVEL MES FROM DUAL CONNECT BY LEVEL <= TRUNC(MONTHS_BETWEEN(TRUNC(A.END_PLANNED_DATE, 'MM'), TRUNC(D.START_DATE, 'MM'))) + 1) TABMES
        LEFT JOIN IFSLAF.C_MEASUREMENT_BULLETIN_MANAGER E ON (A.OPPORTUNITY_NO = E.OPPORTUNITY_NO AND A.AGREEMENT_ID = E.AGREEMENT_ID AND E.START_MEASUREMENT_DATE = TRUNC(GREATEST(D.START_DATE, TRUNC(ADD_MONTHS(TRUNC(ADD_MONTHS(D.START_DATE, TABMES.MES - 1), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_BILLING_CUTOFF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1, -1)) + 1)) AND E.END_MEASUREMENT_DATE = TRUNC(LEAST(NVL(D.FINISH_DATE, IFSLAF.DATABASE_SYS.GET_LAST_CALENDAR_DATE), A.END_PLANNED_date, (TRUNC(ADD_MONTHS(D.START_DATE, TABMES.MES - 1), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_BILLING_CUTOFF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1))))
        WHERE A.OBJSTATE = 'Active'
          AND NVL(A.CF$_BLOCKED_INVOICED_DB, '02') = '02'
          AND IFSLAF.C_REC_AGREEMENT_INFO_API.GET_NEXT_BILLING_REF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID) >= TRUNC(SYSDATE)
          AND (TRUNC(ADD_MONTHS(D.START_DATE + IFSLAF.C_REC_AGREEMENT_INFO_API.GET_DAYS_FOR_APPROVAL(A.OPPORTUNITY_NO, A.AGREEMENT_ID), TABMES.MES), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_NEXT_BILLING_REF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1 >= TRUNC(SYSDATE))
          AND (TRUNC(LEAST(NVL(D.FINISH_DATE, IFSLAF.DATABASE_SYS.GET_LAST_CALENDAR_DATE), A.END_PLANNED_DATE, (TRUNC(ADD_MONTHS(D.START_DATE, TABMES.MES - 1), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_BILLING_CUTOFF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1))) >= TRUNC(GREATEST(D.START_DATE, TRUNC(ADD_MONTHS(TRUNC(ADD_MONTHS(D.START_DATE, TABMES.MES - 1), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_BILLING_CUTOFF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1, -1)) + 1)))

        UNION ALL
        
        SELECT
            'LOCACAO' AS PARAMETRO_PROJECAO,
            CAST(A.AGREEMENT_ID AS VARCHAR2(10)) AS CONTRATO_RECORRENTE,
            A.OPPORTUNITY_NO AS OPORTUNIDADE,
            A.CUSTOMER_ID AS ID_CLIENTE,
            A.COMPANY AS EMPRESA,
            A.CONTRACT AS SITE,
            COALESCE(A.CF$_CODE_H, A.CONTRACT) AS APR_CUSTO,
            A.STATE AS STATUS_CONTRATO,
            A.AGREEMENT_TYPE AS TIPO_CONTRATO,
            A.SALESMAN_CODE AS VENDEDOR,
            A.AGREEMENT_MODALITY_DB,
            TRUNC(A.END_PLANNED_DATE) AS DATA_FINAL_PLANEJADO,
            CASE WHEN TRUNC(ADD_MONTHS(D.START_DATE + IFSLAF.C_REC_AGREEMENT_INFO_API.GET_DAYS_FOR_APPROVAL(A.OPPORTUNITY_NO, A.AGREEMENT_ID), TABMES.MES - 1), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_NEXT_BILLING_REF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1 < SYSDATE THEN TRUNC(SYSDATE, 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_NEXT_BILLING_REF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') + CASE WHEN TRUNC(SYSDATE, 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_NEXT_BILLING_REF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') -1 < SYSDATE THEN 29 ELSE - 1 END ELSE TRUNC(ADD_MONTHS(D.START_DATE + IFSLAF.C_REC_AGREEMENT_INFO_API.GET_DAYS_FOR_APPROVAL(A.OPPORTUNITY_NO, A.AGREEMENT_ID), TABMES.MES - 1), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_NEXT_BILLING_REF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1 END AS DATA_PROX_FAT,
            IFSLAF.C_REC_AGREEMENT_INFO_CFP.Get_Cf$_Data_Real_Medicao(IFSLAF.C_REC_AGREEMENT_INFO_CFP.Get_Objkey(A.OPPORTUNITY_NO,A.AGREEMENT_ID)) DT_REAL_ENVIO_MEDICAO,
            CASE WHEN TRUNC(GREATEST(D.START_DATE, TRUNC(ADD_MONTHS(TRUNC(ADD_MONTHS(D.START_DATE, TABMES.MES - 1), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_BILLING_CUTOFF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1, -1)) + 1)) = TRUNC(ADD_MONTHS(TRUNC(ADD_MONTHS(D.START_DATE, TABMES.MES - 1), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_BILLING_CUTOFF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1, -1)) + 1 AND TRUNC(LEAST(NVL(D.FINISH_DATE, IFSLAF.DATABASE_SYS.GET_LAST_CALENDAR_DATE), A.END_PLANNED_DATE, (TRUNC(ADD_MONTHS(D.START_DATE, TABMES.MES - 1), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_BILLING_CUTOFF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1))) = TRUNC(ADD_MONTHS(D.START_DATE, TABMES.MES - 1), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_BILLING_CUTOFF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1 THEN D.MONTH_VALUE ELSE D.MONTH_VALUE / 30 * (TRUNC(LEAST(NVL(D.FINISH_DATE, IFSLAF.DATABASE_SYS.GET_LAST_CALENDAR_DATE), A.END_PLANNED_DATE, (TRUNC(ADD_MONTHS(D.START_DATE, TABMES.MES - 1), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_BILLING_CUTOFF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1))) - TRUNC(GREATEST(D.START_DATE, TRUNC(ADD_MONTHS(TRUNC(ADD_MONTHS(D.START_DATE, TABMES.MES - 1), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_BILLING_CUTOFF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1, -1)) + 1)) + 1) END AS VALOR_LOCADO,
            CAST(NULL AS VARCHAR2(100)) AS SETOR_RESPONSAVEL,
            CAST(NULL AS VARCHAR2(4000)) AS OBSERVACOES
        FROM IFSLAF.C_RECURRENT_AGREEMENT_CFV A
        INNER JOIN IFSLAF.C_REC_AGREEMENT_ITEM B ON A.OPPORTUNITY_NO = B.OPPORTUNITY_NO AND A.AGREEMENT_ID = B.AGREEMENT_ID
        INNER JOIN IFSLAF.C_REC_AGREEMENT_ITEM_PROD C ON B.OPPORTUNITY_NO = C.OPPORTUNITY_NO AND B.AGREEMENT_ID = C.AGREEMENT_ID AND B.LINE_NO = C.LINE_NO
        INNER JOIN IFSLAF.C_REC_AGREEMENT_RENTED_ASSET D ON A.OPPORTUNITY_NO = D.OPPORTUNITY_NO AND A.AGREEMENT_ID = D.AGREEMENT_ID AND C.LINE_NO = D.LINE_NO AND C.SEQ_NO = D.SEQ_NO AND D.RENTED_ASSET = 'TRUE'
        CROSS APPLY (SELECT LEVEL MES FROM DUAL CONNECT BY LEVEL <= TRUNC(MONTHS_BETWEEN(TRUNC(A.END_PLANNED_DATE, 'MM'), TRUNC(D.START_DATE, 'MM'))) + 2) TABMES
        WHERE A.OBJSTATE = 'Active'
          AND NVL(A.CF$_BLOCKED_INVOICED_DB, '02') = '02'
          AND IFSLAF.C_REC_AGREEMENT_INFO_API.GET_NEXT_BILLING_REF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID) < TRUNC(SYSDATE)
          AND (TRUNC(GREATEST(D.START_DATE, TRUNC(ADD_MONTHS(TRUNC(ADD_MONTHS(D.START_DATE, TABMES.MES - 1), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_BILLING_CUTOFF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1, -1)) + 1)) <= TRUNC(LEAST(NVL(D.FINISH_DATE, IFSLAF.DATABASE_SYS.GET_LAST_CALENDAR_DATE), A.END_PLANNED_DATE, (TRUNC(ADD_MONTHS(D.START_DATE, TABMES.MES - 1), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_BILLING_CUTOFF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1))))

        UNION ALL
        
        SELECT
            'SERVICO' AS PARAMETRO_PROJECAO,
            CAST(A.AGREEMENT_ID AS VARCHAR2(10)) AS CONTRATO_RECORRENTE,
            A.OPPORTUNITY_NO AS OPORTUNIDADE,
            A.CUSTOMER_ID AS ID_CLIENTE,
            A.COMPANY AS EMPRESA,
            A.CONTRACT AS SITE,
            COALESCE(A.CF$_CODE_H, A.CONTRACT) AS APR_CUSTO,
            A.STATE AS STATUS_CONTRATO,
            A.AGREEMENT_TYPE AS TIPO_CONTRATO,
            A.SALESMAN_CODE AS VENDEDOR,
            A.AGREEMENT_MODALITY_DB,
            TRUNC(A.END_PLANNED_DATE) AS DATA_FINAL_PLANEJADO,
            TRUNC(ADD_MONTHS(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_NEXT_BILLING_REF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID) + IFSLAF.C_REC_AGREEMENT_INFO_API.GET_DAYS_FOR_APPROVAL(A.OPPORTUNITY_NO, A.AGREEMENT_ID), TABMES.MES - 2), 'MM') + TO_CHAR(IFSLAF.C_REC_AGREEMENT_INFO_API.GET_NEXT_BILLING_REF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID), 'DD') - 1 AS DATA_PROX_FAT,
            CAST(NULL AS DATE) AS DT_REAL_ENVIO_MEDICAO,
            C.MONTHLY_EXPECTED_VALUE * 0.85 AS VALOR_LOCADO,
            CAST(NULL AS VARCHAR2(100)) AS SETOR_RESPONSAVEL,
            CAST(NULL AS VARCHAR2(4000)) AS OBSERVACOES
        FROM IFSLAF.C_RECURRENT_AGREEMENT_CFV A
        INNER JOIN IFSLAF.C_REC_AGREEMENT_ITEM B ON A.OPPORTUNITY_NO = B.OPPORTUNITY_NO AND A.AGREEMENT_ID = B.AGREEMENT_ID
        INNER JOIN IFSLAF.C_REC_AGREEMENT_ITEM_SERV C ON B.OPPORTUNITY_NO = C.OPPORTUNITY_NO AND B.AGREEMENT_ID = C.AGREEMENT_ID AND B.LINE_NO = C.LINE_NO
        CROSS APPLY (SELECT LEVEL MES FROM DUAL CONNECT BY LEVEL <= TRUNC(MONTHS_BETWEEN(A.END_PLANNED_DATE, IFSLAF.C_REC_AGREEMENT_INFO_API.GET_NEXT_BILLING_REF_DATE(A.OPPORTUNITY_NO, A.AGREEMENT_ID))) + 2 ) TABMES
        WHERE A.COMPANY = '41'
          AND A.OBJSTATE = 'Active'
    ) CONREC
    GROUP BY
        CONREC.PARAMETRO_PROJECAO,
        CONREC.CONTRATO_RECORRENTE,
        CONREC.OPORTUNIDADE,
        CONREC.DATA_FINAL_PLANEJADO,
        CONREC.DATA_PROX_FAT,
        CONREC.DT_REAL_ENVIO_MEDICAO,
        CONREC.ID_CLIENTE,
        CONREC.EMPRESA,
        CONREC.SITE,
        CONREC.APR_CUSTO,
        CONREC.STATUS_CONTRATO,
        CONREC.TIPO_CONTRATO,
        CONREC.VENDEDOR,
        CONREC.AGREEMENT_MODALITY_DB,
        CONREC.SETOR_RESPONSAVEL,
        CONREC.OBSERVACOES
)
SELECT
    S.PARAMETRO_PROJECAO,
    S.CONTRATO_RECORRENTE AS N_CONTRATO,
    S.COTACAO_VENDAS AS N_COTACAO,
    S.ORDEM_VENDA AS ID_OV,
    S.OPORTUNIDADE AS ID_OPORTUNIDADE,
    TRUNC(S.DATA_FINAL_PLANEJADO) AS DATA_FINAL_PLANEJADO,
    TRUNC(S.DATA_PROX_FAT) AS DATA_PROX_FAT,
    S.DT_REAL_ENVIO_MEDICAO,
    S.ID_CLIENTE,
    S.NOME_CLIENTE AS DESC_CLIENTE,
    UPPER(S.TIPO_CLIENTE) AS TIPO_PARCEIRO,
    S.EMPRESA AS ID_EMPRESA,
    S.SITE AS ID_SITE,
    S.APR_CUSTO AS ID_CODE_H_APR_CUSTO,
    UPPER(S.STATUS_CONTRATO) AS STATUS_CONTRATO,
    UPPER(S.TIPO_CONTRATO) AS TIPO_CONTRATO,
    S.VENDEDOR AS ID_VENDEDOR,
    UPPER(S.MODALIDADE_CONTRATO) AS MODALIDADE_CONTRATO,
    S.VALOR_LOCADO_MENSAL,
    S.SETOR_RESPONSAVEL,
    S.OBSERVACOES,
    P.VALOR_PROJECAO
FROM SUBTAB S
LEFT JOIN PROJECAO_VALOR P ON S.OPORTUNIDADE = P.opportunity_no
WHERE S.VALOR_LOCADO_MENSAL <> 0
--AND UPPER(S.MODALIDADE_CONTRATO) IN ('SERVIÇOS','FÁBRICA','MÓDULOS','MÁQUINAS')
